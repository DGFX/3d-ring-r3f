/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF, Caustics, MeshRefractionMaterial } from "@react-three/drei";
import { useControls } from 'leva'
import { RGBELoader } from 'three-stdlib'
import { useLoader } from "@react-three/fiber";


export default function ExampleRing(props) {
    const { nodes, materials } = useGLTF("/ring-random.glb");
    const diamondTexture = useLoader(RGBELoader, 'https://dl.polyhaven.org/file/ph-assets/HDRIs/hdr/1k/aerodynamics_workshop_1k.hdr')

    const config = useControls({
        bounces: { value: 3, min: 0, max: 8, step: 1 },
        aberrationStrength: { value: 0.01, min: 0, max: 0.1, step: 0.01 },
        ior: { value: 2.75, min: 0, max: 10 },
        fresnel: { value: 1, min: 0, max: 1 },
        color: 'white',
        fastChroma: false
    })

    return (
        <group {...props} dispose={null}>
            <mesh
                name="Ring"
                castShadow
                receiveShadow
                geometry={nodes.Ring.geometry}
                material={materials["White Gold"]}
                position={[0, 0, 0]}
            >
                <mesh
                    name="Diamond_Holder"
                    castShadow
                    receiveShadow
                    geometry={nodes.Diamond_Holder.geometry}
                    material={materials["White Gold"]}
                />
                <mesh
                    name="Diamonds"
                    castShadow
                    receiveShadow
                    geometry={nodes.Diamonds.geometry}
                // material={materials.Diamond}
                >
                    <MeshRefractionMaterial envMap={diamondTexture} {...config} toneMapped={false} />
                </mesh>
            </mesh>
        </group>
    );
}

useGLTF.preload("/ring-random.glb");
